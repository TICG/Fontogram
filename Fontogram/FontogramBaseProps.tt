<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;

namespace PergleLabs.UI
{

    public partial class FontogramBase
        : FontogramProperties
    {
<#
foreach (string propName in new List<string>{"Text", "TextAttr", "TextPosRel", "TextTransform", "BackAttr", "BackPosRel", "BackCornerRadiusRel", "BackTransform"})
{
    string depPropName = $"{propName}Property";
#>

        public static readonly DependencyProperty <#= propName #>Property = DependencyProperty.Register(
            "<#= propName #>", typeof(string), typeof(FontogramBase), new PropertyMetadata(null, On<#= propName #>Changed) );
        private static void On<#= propName #>Changed(DependencyObject depObj, DependencyPropertyChangedEventArgs e)
        {
            (depObj as FontogramBase).SetPropertyValuesInLayers(e.NewValue as string, e.Property.Name);
        }
        public string <#= propName #>
        {
            get { return (string)GetValue(<#= propName #>Property); }
            set { SetValue(<#= propName #>Property, value); }
        }
<#
}
#>

    }

}